#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–º–ø–æ—Ä—Ç–∞.
"""

import subprocess
import sys
import time
import os

def run_command(command, check=True):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤ shell."""
    print(f"üîß –í—ã–ø–æ–ª–Ω—è–µ–º: {command}")
    result = subprocess.run(command, shell=True, capture_output=True, text=True)
    
    if result.stdout:
        print(result.stdout)
    
    if result.stderr and check:
        print(f"‚ùå –û—à–∏–±–∫–∞: {result.stderr}")
        if check:
            sys.exit(1)
    
    return result

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞."""
    
    print("üöÄ –ó–∞–ø—É—Å–∫ Faida Group Store...")
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker...")
    try:
        run_command("docker --version")
        run_command("docker-compose --version")
    except:
        print("‚ùå Docker –∏–ª–∏ Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
        sys.exit(1)
    
    # 2. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)
    print("\n2Ô∏è‚É£ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...")
    run_command("docker-compose down", check=False)
    
    # 3. –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    print("\n3Ô∏è‚É£ –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...")
    run_command("docker-compose up --build -d")
    
    # 4. –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    print("\n4Ô∏è‚É£ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    time.sleep(10)
    
    # 5. –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
    print("\n5Ô∏è‚É£ –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    run_command("docker-compose exec backend python manage.py makemigrations")
    run_command("docker-compose exec backend python manage.py migrate")
    
    # 6. –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n6Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    run_command(
        'docker-compose exec backend python manage.py shell -c "'
        'from django.contrib.auth import get_user_model; '
        'User = get_user_model(); '
        'User.objects.filter(username=\"admin\").exists() or '
        'User.objects.create_superuser(\"admin\", \"admin@faida.ru\", \"admin123\")'
        '"'
    )
    
    # 7. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("\n7Ô∏è‚É£ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ 1–°...")
    run_command("docker-compose exec backend python manage.py import_1c_data")
    
    # 8. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—É—Å–∫–µ
    print("\n‚úÖ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
    print("\nüìç –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–¥—Ä–µ—Å–∞:")
    print("   üî• Frontend (Vite): http://localhost:5173/")
    print("   üåê Django Admin: http://localhost:8000/admin/")
    print("   üìö API Docs: http://localhost:8000/api/docs/")
    print("   üîó API: http://localhost:8000/api/")
    print("\nüîë –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∞:")
    print("   –õ–æ–≥–∏–Ω: admin")
    print("   –ü–∞—Ä–æ–ª—å: admin123")
    
    print("\nüìä –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤:")
    print("   docker-compose logs -f backend")
    print("   docker-compose logs -f frontend")
    
    print("\nüõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏:")
    print("   docker-compose down")

if __name__ == "__main__":
    main()