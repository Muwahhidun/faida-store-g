# Generated by Django 4.2.25 on 2025-10-12 13:53

from django.db import migrations, models
import django.db.models.deletion


def migrate_channel_to_channel_type(apps, schema_editor):
    """
    Переносим данные из поля channel в channel_type.
    Берем code канала и копируем его в channel_type.
    """
    NotificationContact = apps.get_model('notifications', 'NotificationContact')

    for contact in NotificationContact.objects.all():
        if contact.channel:
            contact.channel_type = contact.channel.code
            contact.save()


def reverse_migrate_channel_type(apps, schema_editor):
    """
    Обратная миграция: восстанавливаем связь channel по channel_type.
    """
    NotificationContact = apps.get_model('notifications', 'NotificationContact')
    NotificationChannel = apps.get_model('notifications', 'NotificationChannel')

    for contact in NotificationContact.objects.all():
        if contact.channel_type:
            try:
                channel = NotificationChannel.objects.get(code=contact.channel_type)
                contact.channel = channel
                contact.save()
            except NotificationChannel.DoesNotExist:
                pass  # Игнорируем если канал не найден


class Migration(migrations.Migration):

    dependencies = [
        ('notifications', '0004_alter_notificationcontact_channel_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='notificationcontact',
            options={'ordering': ['channel_type', 'name'], 'verbose_name': 'Контакт для уведомлений', 'verbose_name_plural': 'Контакты для уведомлений'},
        ),
        migrations.AddField(
            model_name='notificationcontact',
            name='channel_type',
            field=models.CharField(blank=True, choices=[('telegram', 'Telegram'), ('whatsapp', 'WhatsApp'), ('email', 'Email')], help_text='Тип канала для отправки уведомлений', max_length=50, null=True, verbose_name='Тип канала'),
        ),
        migrations.AlterField(
            model_name='notificationcontact',
            name='channel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='contacts', to='notifications.notificationchannel', verbose_name='Канал'),
        ),
        migrations.AlterField(
            model_name='notificationcontact',
            name='value',
            field=models.CharField(help_text='Email адрес, номер телефона или username (для Telegram - @username или chat_id)', max_length=200, verbose_name='Значение'),
        ),
        migrations.RunPython(migrate_channel_to_channel_type, reverse_migrate_channel_type),
    ]
