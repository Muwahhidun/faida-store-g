# Generated by Django 4.2.7 on 2025-10-06 22:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='IntegrationSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Понятное название, например, 'Основная база ПП'", max_length=255, verbose_name='Название источника')),
                ('code', models.SlugField(help_text="Короткий уникальный код, например, 'pp' или 'opt'", unique=True, verbose_name='Код источника')),
                ('json_file_path', models.CharField(help_text="Относительный путь к файлу данных от папки 'goods_data'", max_length=500, verbose_name='Путь к JSON файлу')),
                ('media_dir_path', models.CharField(help_text="Относительный путь к папке с медиафайлами от 'goods_data'", max_length=500, verbose_name='Путь к папке с медиа')),
                ('default_price_type', models.CharField(blank=True, help_text='UUID кода цены из 1С', max_length=255, null=True, verbose_name='Код вида цены по умолчанию')),
                ('default_warehouse', models.CharField(blank=True, help_text='UUID кода склада из 1С', max_length=255, null=True, verbose_name='Код склада по умолчанию')),
                ('is_active', models.BooleanField(default=True, help_text='Источник будет использоваться для импорта только если он активен.', verbose_name='Активен')),
                ('show_on_site', models.BooleanField(default=True, help_text='Если флаг установлен, товары из этого источника будут видны покупателям.', verbose_name='Показывать на сайте')),
                ('import_status', models.CharField(choices=[('idle', 'Ожидание'), ('running_data', 'Синхронизация данных'), ('running_full', 'Полная синхронизация'), ('completed', 'Завершен'), ('failed', 'Ошибка')], default='idle', help_text='Текущий статус импорта данных', max_length=20, verbose_name='Статус импорта')),
                ('last_import_started', models.DateTimeField(blank=True, help_text='Дата и время последнего запуска импорта', null=True, verbose_name='Последний запуск импорта')),
                ('last_import_completed', models.DateTimeField(blank=True, help_text='Дата и время последнего успешного завершения импорта', null=True, verbose_name='Последнее завершение импорта')),
                ('import_error_message', models.TextField(blank=True, help_text='Последнее сообщение об ошибке импорта', null=True, verbose_name='Сообщение об ошибке')),
                ('last_error_time', models.DateTimeField(blank=True, null=True, verbose_name='Время последней ошибки')),
                ('auto_sync_enabled', models.BooleanField(default=False, help_text='Включить автоматическую синхронизацию по расписанию', verbose_name='Автосинхронизация включена')),
                ('data_sync_interval', models.PositiveIntegerField(default=5, help_text='Как часто синхронизировать данные (цены, остатки, названия) без медиафайлов', verbose_name='Интервал синхронизации данных (минуты)')),
                ('last_data_sync', models.DateTimeField(blank=True, null=True, verbose_name='Последняя синхронизация данных')),
                ('next_data_sync', models.DateTimeField(blank=True, null=True, verbose_name='Следующая синхронизация данных')),
                ('full_sync_interval', models.PositiveIntegerField(default=60, help_text='Как часто выполнять полную синхронизацию включая медиафайлы', verbose_name='Интервал полной синхронизации (минуты)')),
                ('last_full_sync', models.DateTimeField(blank=True, null=True, verbose_name='Последняя полная синхронизация')),
                ('next_full_sync', models.DateTimeField(blank=True, null=True, verbose_name='Следующая полная синхронизация')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Источник данных 1С',
                'verbose_name_plural': 'Источники данных 1С',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SyncLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sync_type', models.CharField(choices=[('full', 'Полная'), ('partial', 'Частичная')], default='full', max_length=20)),
                ('status', models.CharField(choices=[('started', 'Запущена'), ('in_progress', 'В процессе'), ('completed', 'Завершена'), ('failed', 'Ошибка'), ('cancelled', 'Отменена')], default='started', max_length=20, verbose_name='Статус')),
                ('total_products', models.IntegerField(default=0, verbose_name='Всего товаров')),
                ('processed_products', models.IntegerField(default=0, verbose_name='Обработано товаров')),
                ('created_products', models.IntegerField(default=0, verbose_name='Создано товаров')),
                ('updated_products', models.IntegerField(default=0, verbose_name='Обновлено товаров')),
                ('errors_count', models.IntegerField(default=0, verbose_name='Количество ошибок')),
                ('message', models.TextField(blank=True, verbose_name='Сообщение')),
                ('error_details', models.TextField(blank=True, verbose_name='Детали ошибок')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='Время начала')),
                ('finished_at', models.DateTimeField(blank=True, null=True, verbose_name='Время окончания')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='Длительность')),
                ('source_file_path', models.CharField(blank=True, max_length=500, verbose_name='Путь к исходному файлу')),
                ('source_file_size', models.BigIntegerField(blank=True, null=True, verbose_name='Размер исходного файла')),
                ('source_file_modified', models.DateTimeField(blank=True, null=True, verbose_name='Дата изменения файла')),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sync1c.integrationsource', verbose_name='Источник данных')),
            ],
            options={
                'verbose_name': 'Лог синхронизации',
                'verbose_name_plural': 'Логи синхронизации',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='SyncError',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(blank=True, max_length=50, verbose_name='Код товара')),
                ('error_type', models.CharField(max_length=100, verbose_name='Тип ошибки')),
                ('error_message', models.TextField(verbose_name='Сообщение об ошибке')),
                ('stack_trace', models.TextField(blank=True, verbose_name='Стек ошибки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время возникновения')),
                ('sync_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='errors', to='sync1c.synclog', verbose_name='Лог синхронизации')),
            ],
            options={
                'verbose_name': 'Ошибка синхронизации',
                'verbose_name_plural': 'Ошибки синхронизации',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='synclog',
            index=models.Index(fields=['status', 'started_at'], name='sync1c_sync_status_078cae_idx'),
        ),
        migrations.AddIndex(
            model_name='synclog',
            index=models.Index(fields=['sync_type', 'started_at'], name='sync1c_sync_sync_ty_6435e4_idx'),
        ),
    ]
